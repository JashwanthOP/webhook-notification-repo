name: Webhook Notification Workflow

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  pull_request:
    branches:
      - main  # Trigger on PR to main branch

jobs:
  send-webhook:
    runs-on: ubuntu-latest  # Use an Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up date and commit details
        id: set_details
        run: |
          export RECENT_COMMIT_HASH="$(git show --format="%H" -s)"
          export RECENT_COMMIT_DATE="$(git show --format="%cD" -s)"
          export RECENT_COMMIT_TITLE="$(git show --format="%s" -s)"
          export RECENT_COMMIT_AUTHOR_NAME="$(git show --format="%an" -s)"
          export RECENT_COMMIT_AUTHOR_EMAIL="$(git show --format="%ae" -s)"
          export WORKFLOW_RUN_ID="${{ github.run_id }}"
          export WORKFLOW_NAME="${{ github.workflow }}"
          echo "##[set-output name=recent_commit_hash;]$RECENT_COMMIT_HASH"
          echo "##[set-output name=recent_commit_date;]$RECENT_COMMIT_DATE"
          echo "##[set-output name=recent_commit_title;]$RECENT_COMMIT_TITLE"
          echo "##[set-output name=recent_commit_author_name;]$RECENT_COMMIT_AUTHOR_NAME"
          echo "##[set-output name=recent_commit_author_email;]$RECENT_COMMIT_AUTHOR_EMAIL"
          echo "##[set-output name=workflow_run_id;]$WORKFLOW_RUN_ID"
          echo "##[set-output name=workflow_name;]$WORKFLOW_NAME"

      - name: Create HTML Report (local)
        id: create_html_report
        run: |
          # Generate HTML content dynamically
          export RECENT_COMMIT_HASH="${{ steps.set_details.outputs.recent_commit_hash }}"
          export RECENT_COMMIT_DATE="${{ steps.set_details.outputs.recent_commit_date }}"
          export RECENT_COMMIT_TITLE="${{ steps.set_details.outputs.recent_commit_title }}"
          export RECENT_COMMIT_AUTHOR_NAME="${{ steps.set_details.outputs.recent_commit_author_name }}"
          export RECENT_COMMIT_AUTHOR_EMAIL="${{ steps.set_details.outputs.recent_commit_author_email }}"
          export WORKFLOW_RUN_ID="${{ steps.set_details.outputs.workflow_run_id }}"
          export WORKFLOW_NAME="${{ steps.set_details.outputs.workflow_name }}"
          
          HTML_CONTENT=$(cat <<EOF
<!DOCTYPE html>
<html lang="en">
<body>
  <div>
    <h4>Workflow Details</h4>
    <table cellspacing="3" bgcolor="#000000">
      <tr bgcolor="#ffffff">
        <th>Workflow Run Id</th>
        <th>Workflow Name</th>
        <th>Image Name</th>
      </tr>
      <tr bgcolor="#ffffff">
        <td><a href="https://github.com/${{ github.repository }}/runs/#${WORKFLOW_RUN_ID}">${WORKFLOW_RUN_ID}</a></td>
        <td>${WORKFLOW_NAME}</td>
        <td>${{ steps.set_details.outputs.recent_commit_hash }}</td>
      </tr>
    </table>
  </div>
  
  <div>
    <h4>Recent Commit Details</h4>
    <table cellspacing="3" bgcolor="#000000">
      <tr bgcolor="#ffffff">
        <th>Commit Hash</th>
        <th>Commit Date</th>
        <th>Commit Title</th>
        <th>Commit Author Name</th>
        <th>Commit Author Email</th>
      </tr>
      <tr bgcolor="#ffffff">
        <td><a href="https://github.com/${{ github.repository }}/commit/${{ steps.set_details.outputs.recent_commit_hash }}">${{ steps.set_details.outputs.recent_commit_hash }}</a></td>
        <td>${{ steps.set_details.outputs.recent_commit_date }}</td>
        <td>${{ steps.set_details.outputs.recent_commit_title }}</td>
        <td>${{ steps.set_details.outputs.recent_commit_author_name }}</td>
        <td>${{ steps.set_details.outputs.recent_commit_author_email }}</td>
      </tr>
    </table>
  </div>
</body>
</html>
EOF
          echo "::set-output name=html_report::$HTML_CONTENT"

      - name: Send Webhook Notification with HTML Report
        if: always()  # Send webhook even if the job fails
        run: |
          curl -X POST ${{ secrets.WEBHOOK_URL }} \
          -H "Content-Type: application/json" \
          -d '{
            "incident-description": "GitHub workflow triggered for repository: '"${{ github.repository }}"'",
            "user": "'"${{ github.actor }}"'",
            "severity": "'"${{ job.status == 'success' && 'low' || 'high' }}"'",
            "html_report": "'"${{ steps.create_html_report.outputs.html_report }}"'"
          }'
